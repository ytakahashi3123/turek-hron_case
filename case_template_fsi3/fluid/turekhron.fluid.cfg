%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                              %
% SU2 configuration file                                                       %
% Case description: Unsteady periodic detached NACA0012 simulation             %
% Author: Steffen SchotthÃ¶fer                                                  %
% Institution: TU Kaiserslautern                                               %
% Date: Jan 21, 2020                                                           %
% File Version 7.0.1 "Blackbird" (or newer)                                    %
%                                                                              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Trek-Hron case: http://www.mathematik.tu-dortmund.de/~featflow/en/benchmarks/cfdbenchmarking/fsi_benchmark.html

% ------------- PRECICE PROBLEM DEFINITION ------------%

%PRECICE_USAGE= NO
%
%PRECICE_CONFIG_FILENAME= ./precice-config.xml
%
%PRECICE_PARTICIPANT_NAME=SU2_CFD
%
%PRECICE_MESH_NAME=SU2_Mesh0
%
%PRECICE_READ_DATA_NAME=DisplacementDeltas0
%
%PRECICE_WRITE_DATA_NAME=Forces0
%
%PRECICE_WETSURFACE_MARKER_NAME= wetsurface
%
%PRECICE_NUMBER_OF_WETSURFACES= 1

% ------------- DIECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%
%
% Physical governing equations (EULER, NAVIER_STOKES, NS_PLASMA)
%                               
%SOLVER= NAVIER_STOKES
SOLVER= INC_NAVIER_STOKES
%
% Specify turbulent model (NONE, SA, SA_NEG, SST)
KIND_TURB_MODEL= NONE
%
% Specify subgrid scale model(NONE, IMPLICIT_LES, SMAGORINSKY, WALE, VREMAN)
KIND_SGS_MODEL= NONE
%
% Specify Hybrid RANS/LES model (SA_DES, SA_DDES, SA_ZDES, SA_EDDES)
HYBRID_RANSLES= NONE 
%
% DES Constant (0.65)
DES_CONST= 0.65
%
% Mathematical problem (DIRECT, CONTINUOUS_ADJOINT)
MATH_PROBLEM= DIRECT
%
% System of measurements (SI, US)
% International system of units (SI): ( meters, kilograms, Kelvins,
%                                       Newtons = kg m/s^2, Pascals = N/m^2, 
%                                       Density = kg/m^3, Speed = m/s,
%                                       Equiv. Area = m^2 )
% United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, 
%                                       psf = lbf/ft^2, Density = slug/ft^3, 
%                                       Speed = ft/s, Equiv. Area = ft^2 )
SYSTEM_MEASUREMENTS= SI
%
% ------------------------- UNSTEADY SIMULATION -------------------------------%
%
TIME_DOMAIN = YES
%
% Numerical Method for Unsteady simulation(NO, TIME_STEPPING, DUAL_TIME_STEPPING-1ST_ORDER, DUAL_TIME_STEPPING-2ND_ORDER, TIME_SPECTRAL)
TIME_MARCHING= DUAL_TIME_STEPPING-2ND_ORDER
%
% Time Step for dual time stepping simulations (s)
TIME_STEP= 5.e-2
%
% Maximum Number of physical time steps.
TIME_ITER= 100
%
MAX_TIME= 50.0
%
% Number of internal iterations (dual time method)
INNER_ITER=100
%
% Restart after the transient phase has passed
%RESTART_SOL = YES
RESTART_SOL = NO
%
% Specify unsteady restart iter
RESTART_ITER = 100
%
% -------------------- COMPRESSIBLE FREE-STREAM DEFINITION --------------------%
%
% Turek-Hron FSI3: http://www.mathematik.tu-dortmund.de/~featflow/en/benchmarks/cfdbenchmarking/fsi_benchmark/fsi_tests/fsi_fsi_tests.html
%
% Mach number (non-dimensional, based on the free-stream values)
%MACH_NUMBER= 0.005759974
%
% Angle of attack (degrees, only for compressible flows)
%AOA= 0.0
%
% Side-slip angle (degrees, only for compressible flows)
%SIDESLIP_ANGLE= 0.0
%
% De-Dimensionalization
%REF_DIMENSIONALIZATION = DIMENSIONAL
%
% Free-stream density (1.2886 Kg/m^3, 0.0025 slug/ft^3 by default)
%FREESTREAM_DENSITY= 1000.0
%
% Free-stream velocity (1.0 m/s, 1.0 ft/s by default)
%FREESTREAM_VELOCITY= ( 2.0 0.0 0.0 )
%
% Free-stream temperature (288.15 K by default)
%FREESTREAM_TEMPERATURE= 300
%
% Free-stream pressure (101325.0 N/m^2, 2116.216 psf by default)
%FREESTREAM_PRESSURE= 86117400.0
%
% Free-stream viscosity (1.853E-5 N s/m^2, 3.87E-7 lbf s/ft^2 by default)
%FREESTREAM_VISCOSITY= 1.0
%
% Init option to choose between Reynolds (default) or thermodynamics quantities
% for initializing the solution (REYNOLDS, TD_CONDITIONS)
%INIT_OPTION= REYNOLDS
%
% Free-stream option to choose between density and temperature (default) for
% initializing the solution (TEMPERATURE_FS, DENSITY_FS)
%FREESTREAM_OPTION= TEMPERATURE_FS
%
% Reynolds number (non-dimensional, based on the free-stream values)
%REYNOLDS_NUMBER= 200
%
% Reynolds length (1 m by default)
%REYNOLDS_LENGTH= 0.1

% ---------------- INCOMPRESSIBLE FLOW CONDITION DEFINITION -------------------%
%
% Density model within the incompressible flow solver.
% Options are CONSTANT (default), BOUSSINESQ, or VARIABLE. If VARIABLE,
% an appropriate fluid model must be selected.
INC_DENSITY_MODEL= CONSTANT
%
% Solve the energy equation in the incompressible flow solver
INC_ENERGY_EQUATION = NO
%
% Initial density for incompressible flows (1.2886 kg/m^3 by default)
INC_DENSITY_INIT= 1000
%
% Initial velocity for incompressible flows (1.0,0,0 m/s by default)
INC_VELOCITY_INIT= ( 2.0, 0.0, 0.0 )
%
% Initial temperature for incompressible flows that include the
% energy equation (288.15 K by default). Value is ignored if
% INC_ENERGY_EQUATION is false.
INC_TEMPERATURE_INIT= 300
%
% Non-dimensionalization scheme for incompressible flows. Options are
% INITIAL_VALUES (default), REFERENCE_VALUES, or DIMENSIONAL.
% INC_*_REF values are ignored unless REFERENCE_VALUES is chosen.
INC_NONDIM= DIMENSIONAL
%INC_NONDIM= REFERENCE_VALUES
%
% Reference density for incompressible flows (1.0 kg/m^3 by default)
INC_DENSITY_REF= 1000
%
% Reference velocity for incompressible flows (1.0 m/s by default)
INC_VELOCITY_REF= 2
%
% Reference temperature for incompressible flows that include the
% energy equation (1.0 K by default)
INC_TEMPERATURE_REF = 300
%
% List of inlet types for incompressible flows. List length must
% match number of inlet markers. Options: VELOCITY_INLET, PRESSURE_INLET.
INC_INLET_TYPE= VELOCITY_INLET
%
% Damping coefficient for iterative updates at pressure inlets. (0.1 by default)
INC_INLET_DAMPING= 0.1
%
% List of outlet types for incompressible flows. List length must
% match number of outlet markers. Options: PRESSURE_OUTLET, MASS_FLOW_OUTLET
INC_OUTLET_TYPE= PRESSURE_OUTLET
%
% Damping coefficient for iterative updates at mass flow outlets. (0.1 by default)
INC_OUTLET_DAMPING= 0.1
%
% ---- IDEAL GAS, POLYTROPIC, VAN DER WAALS AND PENG ROBINSON CONSTANTS -------%
%
% Fluid model (STANDARD_AIR, IDEAL_GAS, VW_GAS, PR_GAS,
%              CONSTANT_DENSITY, INC_IDEAL_GAS, INC_IDEAL_GAS_POLY)
%FLUID_MODEL= STANDARD_AIR
FLUID_MODEL= CONSTANT_DENSITY
%
% Ratio of specific heats (1.4 default and the value is hardcoded
%                          for the model STANDARD_AIR, compressible only)
GAMMA_VALUE= 1.4
%
% Specific gas constant (287.058 J/kg*K default and this value is hardcoded
%                        for the model STANDARD_AIR, compressible only)
GAS_CONSTANT= 287.058
%
% Critical Temperature (131.00 K by default)
%CRITICAL_TEMPERATURE= 131.00
%
% Critical Pressure (3588550.0 N/m^2 by default)
%CRITICAL_PRESSURE= 3588550.0
%
% Acentri factor (0.035 (air))
%ACENTRIC_FACTOR= 0.035
%
% Specific heat at constant pressure, Cp (1004.703 J/kg*K (air)). 
% Incompressible fluids with energy eqn. only (CONSTANT_DENSITY, INC_IDEAL_GAS).
%SPECIFIC_HEAT_CP= 1004.703
%
% Thermal expansion coefficient (0.00347 K^-1 (air)) 
% Used with Boussinesq approx. (incompressible, BOUSSINESQ density model only)
%THERMAL_EXPANSION_COEFF= 0.00347
%
% Molecular weight for an incompressible ideal gas (28.96 g/mol (air) default)
%MOLECULAR_WEIGHT= 28.96
%
% Temperature polynomial coefficients (up to quartic) for specific heat Cp.
% Format -> Cp(T) : b0 + b1*T + b2*T^2 + b3*T^3 + b4*T^4
%CP_POLYCOEFFS= (0.0, 0.0, 0.0, 0.0, 0.0)
%
% --------------------------- VISCOSITY MODEL ---------------------------------%
%
% Viscosity model (SUTHERLAND, CONSTANT_VISCOSITY, POLYNOMIAL_VISCOSITY).
VISCOSITY_MODEL= CONSTANT_VISCOSITY
%
% Molecular Viscosity that would be constant (1.716E-5 by default)
MU_CONSTANT= 1.0
%
% Sutherland Viscosity Ref (1.716E-5 default value for AIR SI)
MU_REF= 1.716E-5
%
% Sutherland Temperature Ref (273.15 K default value for AIR SI)
MU_T_REF= 273.15
%
% Sutherland constant (110.4 default value for AIR SI)
SUTHERLAND_CONSTANT= 110.4
%
% Temperature polynomial coefficients (up to quartic) for viscosity.
% Format -> Mu(T) : b0 + b1*T + b2*T^2 + b3*T^3 + b4*T^4
%MU_POLYCOEFFS= (0.0, 0.0, 0.0, 0.0, 0.0)
%
% --------------------------- THERMAL CONDUCTIVITY MODEL ----------------------%
%
% Laminar Conductivity model (CONSTANT_CONDUCTIVITY, CONSTANT_PRANDTL, 
% POLYNOMIAL_CONDUCTIVITY).
CONDUCTIVITY_MODEL= CONSTANT_PRANDTL
%
% Molecular Thermal Conductivity that would be constant (0.0257 by default)
%KT_CONSTANT= 0.0257
%
% Laminar Prandtl number (0.72 (air), only for CONSTANT_PRANDTL)
PRANDTL_LAM= 0.72
%
% Temperature polynomial coefficients (up to quartic) for conductivity.
% Format -> Kt(T) : b0 + b1*T + b2*T^2 + b3*T^3 + b4*T^4
%KT_POLYCOEFFS= (0.0, 0.0, 0.0, 0.0, 0.0)
%
% Definition of the turbulent thermal conductivity model for RANS
% (CONSTANT_PRANDTL_TURB by default, NONE).
TURBULENT_CONDUCTIVITY_MODEL= CONSTANT_PRANDTL_TURB
%
% Turbulent Prandtl number (0.9 (air) by default)
PRANDTL_TURB= 0.90
%
% ---------------------- REFERENCE VALUE DEFINITION ---------------------------%
%
% Reference origin for moment computation
REF_ORIGIN_MOMENT_X = 0.20
REF_ORIGIN_MOMENT_Y = 0.20
REF_ORIGIN_MOMENT_Z = 0.00
%
% Reference length for pitching, rolling, and yawing non-dimensional moment
REF_LENGTH= 0.1
%
% Reference area for force coefficients (0 implies automatic calculation)
REF_AREA= 0.15707963267
%REF_AREA= 0.01570796326
%
% -------------------- BOUNDARY CONDITION DEFINITION --------------------------%
%
% Navier-Stokes wall boundary marker(s) (NONE = no marker)
MARKER_ISOTHERMAL = (wall, 300.0, cylinder, 300.0, wetsurface, 300.0)
%
% Farfield boundary marker(s) (NONE = no marker)
%MARKER_FAR= ( inlet )
%
% Inlet boundary marker(s) (NONE = no marker) 
% Incompressible: (inlet marker, temperature, velocity magnitude, flow_direction_x,
%           flow_direction_y, flow_direction_z, ... ) where flow_direction is
%           a unit vector.
MARKER_INLET= ( inlet, 300, 2.0, 1.0, 0.0, 0.0 )
%
% Read inlet profile from a file (YES, NO) default: NO
SPECIFIED_INLET_PROFILE= YES
%
% Input file for a specified inlet profile (w/ extension)
INLET_FILENAME= fluid/inlet_profile.dat
%
% Outlet
%MARKER_OUTLET = (outlet, 86117400.0)
MARKER_OUTLET = (outlet, 0.0)
%
%MARKER_SYM=(symmetry)
%
% Marker(s) of the surface to be plotted or designed
MARKER_PLOTTING= ( cylinder, wetsurface )
%
% Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated
MARKER_MONITORING= ( cylinder, wetsurface )
%
% ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%
%
% Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES)
NUM_METHOD_GRAD= GREEN_GAUSS
%
% Courant-Friedrichs-Lewy condition of the finest grid
CFL_NUMBER= 50.0
%
% Adaptive CFL number (NO, YES)
CFL_ADAPT= YES
%
% Parameters of the adaptive CFL number (factor down, factor up, CFL min value,
%                                        CFL max value )
CFL_ADAPT_PARAM= ( 0.5, 1.5, 1.0, 50.0 )
%
% Runge-Kutta alpha coefficients
RK_ALPHA_COEFF= ( 0.66667, 0.66667, 1.000000 )
%
%
% Linear solver for the implicit formulation (BCGSTAB, FGMRES)
LINEAR_SOLVER= FGMRES
%
% Preconditioner of the Krylov linear solver (NONE, ILU, LU_SGS, LINELET, JACOBI)
LINEAR_SOLVER_PREC= LU_SGS
%
% Min error of the linear solver for the implicit formulation
LINEAR_SOLVER_ERROR= 1E-6
%
% Max number of iterations of the linear solver for the implicit formulation
LINEAR_SOLVER_ITER= 20

% -------------------------- MULTIGRID PARAMETERS -----------------------------%

% Multi-Grid Levels (0 = no multi-grid)
MGLEVEL= 0
%
% Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE)
MGCYCLE= V_CYCLE
%
% Multi-grid pre-smoothing level
MG_PRE_SMOOTH= ( 1, 2, 3, 3 )
%
% Multi-grid post-smoothing level
MG_POST_SMOOTH= ( 0, 0, 0, 0 )
%
% Jacobi implicit smoothing of the correction
MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 )
%
% Damping factor for the residual restriction
MG_DAMP_RESTRICTION= 0.9
%
% Damping factor for the correction prolongation
MG_DAMP_PROLONGATION= 0.9

%
% ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%
%
% Monotonic Upwind Scheme for Conservation Laws (TVD) in the flow equations.
%           Required for 2nd order upwind schemes (NO, YES)
MUSCL_FLOW= YES
%
% Slope limiter (NONE, VENKATAKRISHNAN, VENKATAKRISHNAN_WANG,
%                BARTH_JESPERSEN, VAN_ALBADA_EDGE)
SLOPE_LIMITER_FLOW= NONE
%
% Monotonic Upwind Scheme for Conservation Laws (TVD) in the turbulence equations.
%           Required for 2nd order upwind schemes (NO, YES)
%MUSCL_TURB= NO
%
% Slope limiter (NONE, VENKATAKRISHNAN, VENKATAKRISHNAN_WANG,
%                BARTH_JESPERSEN, VAN_ALBADA_EDGE)
%SLOPE_LIMITER_TURB= VENKATAKRISHNAN
%
% Monotonic Upwind Scheme for Conservation Laws (TVD) in the adjoint flow equations.
%           Required for 2nd order upwind schemes (NO, YES)
%MUSCL_ADJFLOW= NO
%
% Slope limiter (NONE, VENKATAKRISHNAN, BARTH_JESPERSEN, VAN_ALBADA_EDGE,
%                SHARP_EDGES, WALL_DISTANCE)
%SLOPE_LIMITER_ADJFLOW= VENKATAKRISHNAN
%
% Monotonic Upwind Scheme for Conservation Laws (TVD) in the turbulence adjoint equations.
%           Required for 2nd order upwind schemes (NO, YES)
%MUSCL_ADJTURB= NO
%
% Slope limiter (NONE, VENKATAKRISHNAN, BARTH_JESPERSEN, VAN_ALBADA_EDGE)
%SLOPE_LIMITER_ADJTURB= VENKATAKRISHNAN
%
% Coefficient for the Venkat''s limiter (upwind scheme). A larger values decrease
%             the extent of limiting, values approaching zero cause
%             lower-order approximation to the solution (0.05 by default)
VENKAT_LIMITER_COEFF= 0.05
%
% Reference coefficient for detecting sharp edges (3.0 by default).
REF_SHARP_EDGES = 3.0
%
% Coefficient for the adjoint sharp edges limiter (3.0 by default).
ADJ_SHARP_LIMITER_COEFF= 3.0
%
% Remove sharp edges from the sensitivity evaluation (NO, YES)
SENS_REMOVE_SHARP = NO
%
% Freeze the value of the limiter after a number of iterations
LIMITER_ITER= 999999
%
% 1st order artificial dissipation coefficients for
%     the LaxâFriedrichs method ( 0.15 by default )
LAX_SENSOR_COEFF= 0.15
%
% 1st order artificial dissipation coefficients for
%     the adjoint LaxâFriedrichs method ( 0.15 by default )
%ADJ_LAX_SENSOR_COEFF= 0.15
%
% 2nd, and 4th order artificial dissipation coefficients for
%     the adjoint JST method ( 0.5, 0.02 by default )
%ADJ_JST_SENSOR_COEFF= ( 0.5, 0.02 )
%
% -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%
%
% Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,
%                              TURKEL_PREC, MSW)
CONV_NUM_METHOD_FLOW=JST
%CONV_NUM_METHOD_FLOW=FDS
%
% Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER)
%
% 1st, 2nd and 4th order artificial dissipation coefficients
JST_SENSOR_COEFF= (  0.0, 0.015625 )
%
% Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT)
TIME_DISCRE_FLOW= EULER_IMPLICIT
%
% -------------------- TURBULENT NUMERICAL METHOD DEFINITION ------------------%
%
% Convective numerical method (SCALAR_UPWIND)
CONV_NUM_METHOD_TURB= SCALAR_UPWIND
%
% Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER)
%
MUSCL_TURB= NO
%
% Time discretization (EULER_IMPLICIT)
TIME_DISCRE_TURB= EULER_IMPLICIT
%
% ----------------------- DYNAMIC MESH DEFINITION -----------------------------%
%
% Type of dynamic mesh (NONE, RIGID_MOTION, DEFORMING, ROTATING_FRAME,
%                       MOVING_WALL, STEADY_TRANSLATION, FLUID_STRUCTURE,
%                       AEROELASTIC, ELASTICITY, EXTERNAL,
%                       AEROELASTIC_RIGID_MOTION, GUST)
%GRID_MOVEMENT= RIGID_MOTION
%GRID_MOVEMENT= PRECICE_MOVEMENT
%
% Motion mach number (non-dimensional). Used for initializing a viscous flow
% with the Reynolds number and for computing force coeffs. with dynamic meshes.
%MACH_MOTION= 0.3
%
% Moving wall boundary marker(s) (NONE = no marker, ignored for RIGID_MOTION)
%MARKER_MOVING= ( NONE )
%
% Coordinates of the motion origin
%MOTION_ORIGIN= 0.2 0.0 0.0
%
% Angular velocity vector (rad/s) about the motion origin
%ROTATION_RATE = 0.0 0.0 0.9
%
% Pitching angular freq. (rad/s) about the motion origin
%PITCHING_OMEGA= 0.0 0.0 0.0
%
% Pitching amplitude (degrees) about the motion origin
%PITCHING_AMPL= 0.0 0.0 0.0
%
% Pitching phase offset (degrees) about the motion origin
%PITCHING_PHASE= 0.0 0.0 0.0
%
% Translational velocity (m/s or ft/s) in the x, y, & z directions
%TRANSLATION_RATE = 0.0 0.0 0.0
%
% Plunging angular freq. (rad/s) in x, y, & z directions
%PLUNGING_OMEGA= 0.0 0.0 0.0
%
% Plunging amplitude (m or ft) in x, y, & z directions
%PLUNGING_AMPL= 0.0 0.0 0.0
%
%
% Type of dynamic surface movement (NONE, DEFORMING, MOVING_WALL,
% AEROELASTIC, AEROELASTIC_RIGID_MOTION EXTERNAL, EXTERNAL_ROTATION, PRECICE_MOVEMENT)
%SURFACE_MOVEMENT= PRECICE_MOVEMENT
%
% Moving wall boundary marker(s) (NONE = no marker, ignored for RIGID_MOTION)
%MARKER_MOVING= ( wetsurface )
%
% Coordinates of the motion origin
%SURFACE_MOTION_ORIGIN= 0.25
%
% Angular velocity vector (rad/s) about the motion origin
%SURFACE_ROTATION_RATE = 0.0 0.0 0.0
%
% Pitching angular freq. (rad/s) about the motion origin
%SURFACE_PITCHING_OMEGA= 0.0 0.0 0.0
%
% Pitching amplitude (degrees) about the motion origin
%SURFACE_PITCHING_AMPL= 0.0 0.0 0.0
%
% Pitching phase offset (degrees) about the motion origin
%SURFACE_PITCHING_PHASE= 0.0 0.0 0.0
%
% Translational velocity (m/s or ft/s) in the x, y, & z directions
%SURFACE_TRANSLATION_RATE = 0.0 0.0 0.0
%
% Plunging angular freq. (rad/s) in x, y, & z directions
%SURFACE_PLUNGING_OMEGA= 0.0 0.0 0.0
%
% Plunging amplitude (m or ft) in x, y, & z directions
%SURFACE_PLUNGING_AMPL= 0.0 0.0 0.0
%
% Move Motion Origin for marker moving (1 or 0)
%MOVE_MOTION_ORIGIN = 0

% ------------------------ GRID DEFORMATION PARAMETERS ------------------------%
%
% Linear solver or smoother for implicit formulations (FGMRES, RESTARTED_FGMRES, BCGSTAB)
DEFORM_LINEAR_SOLVER= FGMRES
%
% Preconditioner of the Krylov linear solver (ILU, LU_SGS, JACOBI)
DEFORM_LINEAR_SOLVER_PREC= LU_SGS
%
% Number of smoothing iterations for mesh deformation
DEFORM_LINEAR_SOLVER_ITER= 50
%
% Number of nonlinear deformation iterations (surface deformation increments)
DEFORM_NONLINEAR_ITER= 5
%
% Print the residuals during mesh deformation to the console (YES, NO)
DEFORM_CONSOLE_OUTPUT= YES
%
% Type of element stiffness imposed for FEA mesh deformation (INVERSE_VOLUME,
%                                          WALL_DISTANCE, CONSTANT_STIFFNESS)
DEFORM_STIFFNESS_TYPE= WALL_DISTANCE
%
% Visualize the deformation (NO, YES)
%VISUALIZE_DEFORMATION= YES
%
% ------------------------- GRID ADAPTATION STRATEGY --------------------------%
%
% Kind of grid adaptation (NONE, PERIODIC, FULL, FULL_FLOW, GRAD_FLOW,
%                          FULL_ADJOINT, GRAD_ADJOINT, GRAD_FLOW_ADJ, ROBUST,
%                          FULL_LINEAR, COMPUTABLE, COMPUTABLE_ROBUST,
%                          REMAINING, WAKE, SMOOTHING, SUPERSONIC_SHOCK)
%KIND_ADAPT= FULL_FLOW
%
% Percentage of new elements (% of the original number of elements)
%NEW_ELEMS= 5
%
% Scale factor for the dual volume
%DUALVOL_POWER= 0.5
%
% Adapt the boundary 
%
% --------------------------- CONVERGENCE PARAMETERS --------------------------%
%
% Convergence criteria (CAUCHY, RESIDUAL)
%CONV_CRITERIA = RESIDUAL
% Field to apply Cauchy Criterion to
%CONV_FIELD= REL_RMS_DENSITY
CONV_FIELD= RMS_PRESSURE
% Min value of the residual (log10 of the residual)
CONV_RESIDUAL_MINVAL= -8
%
%% Time convergence monitoring
%WINDOW_CAUCHY_CRIT = YES
%
% List of time convergence fields 
%CONV_WINDOW_FIELD = (TAVG_DRAG, TAVG_LIFT)
%
% Time Convergence Monitoring starts at Iteration WINDOW_START_ITER + CONV_WINDOW_STARTITER
%CONV_WINDOW_STARTITER = 0
%
% Epsilon to control the series convergence
%CONV_WINDOW_CAUCHY_EPS = 1E-3
%
% Number of elements to apply the criteria
%CONV_WINDOW_CAUCHY_ELEMS = 10
%
% Starting iteration for windowed-time-averaging
%WINDOW_START_ITER = 500
%
% Window used for reverse sweep. Options (SQUARE, HANN, HANN_SQUARE, BUMP)
%WINDOW_FUNCTION = HANN_SQUARE
%
% ------------------------- SCREEN/HISTORY VOLUME OUTPUT --------------------------%
% Screen output fields (use 'SU2_CFD -d <config_file>' to view list of available fields)
%SCREEN_OUTPUT= (INNER_ITER, RMS_DENSITY, RMS_MOMENTUM-X, RMS_MOMENTUM-Y, RMS_ENERGY)
%SCREEN_OUTPUT=(TIME_ITER, INNER_ITER, DRAG, LIFT, RMS_DENSITY, REL_RMS_DENSITY, CAUCHY_TAVG_DRAG, CAUCHY_TAVG_LIFT)
SCREEN_OUTPUT=(TIME_ITER, INNER_ITER, DRAG, LIFT, RMS_PRESSURE, RMS_VELOCITY-X, RMS_VELOCITY-Y)
%
% History output groups (use 'SU2_CFD -d <config_file>' to view list of available fields)
%HISTORY_OUTPUT= (ITER, RMS_RES)
HISTORY_OUTPUT=(ITER, REL_RMS_RES, RMS_RES, AERO_COEFF, RMS_PRESSURE, RMS_VELOCITY-X, RMS_VELOCITY-Y)
%
% Volume output fields/groups (use 'SU2_CFD -d <config_file>' to view list of available fields)
VOLUME_OUTPUT= (COORDINATES, SOLUTION, PRIMITIVE)
%
%HISTORY_WRT_FREQ_INNER=1
%SCREEN_WRT_FREQ_INNER =1
%
% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%
%
% Mesh input file
MESH_FILENAME= fluid/turekhron.su2
%
% Mesh input file format (SU2, CGNS, NETCDF_ASCII)
MESH_FORMAT= SU2
%
% Mesh output file
MESH_OUT_FILENAME= fluid/delta_out.su2
%
% Restart flow input file
SOLUTION_FILENAME= fluid/output_restart/restart_flow.dat
%
% Restart adjoint input file
%SOLUTION_ADJ_FILENAME= fluid/restart_adj.dat
%
% Output file format (PARAVIEW, TECPLOT, STL)
TABULAR_FORMAT= TECPLOT
%
% Output file convergence history (w/o extension) 
CONV_FILENAME= history
%
% Output file restart flow
RESTART_FILENAME= fluid/output_restart/restart_flow.dat
%
% Output file restart adjoint
%RESTART_ADJ_FILENAME= fluid/restart_adj.dat
%
% Files to output 
% Possible formats : (TECPLOT, TECPLOT_BINARY, SURFACE_TECPLOT,
%  SURFACE_TECPLOT_BINARY, CSV, SURFACE_CSV, PARAVIEW, PARAVIEW_BINARY, SURFACE_PARAVIEW, 
%  SURFACE_PARAVIEW_BINARY, MESH, RESTART_BINARY, RESTART_ASCII, CGNS, STL)
% default : (RESTART, PARAVIEW, SURFACE_PARAVIEW)
OUTPUT_FILES= (RESTART_ASCII, PARAVIEW, SURFACE_PARAVIEW)
%
% Read binary restart files (YES, NO)
READ_BINARY_RESTART= NO
%
% Output file flow (w/o extension) variables
VOLUME_FILENAME= fluid/output_flow/flow
%
% Output file surface flow coefficient (w/o extension)
SURFACE_FILENAME= fluid/output_surface_flow/surface_flow
%
% Writing solution file frequency
OUTPUT_WRT_FREQ=1000
